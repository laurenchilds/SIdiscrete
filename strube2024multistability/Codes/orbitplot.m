function [figurehandle,newfigurecounter]=...
   orbitplot(xdata,ydata,yavgdata,bpidentity,bpconstantvalue,...
   figuretitle,bplabel,yaxislabel,legendentries,oldfigurecounter)

%==========================================================================
%% CODE DESCRIPTION
%==========================================================================
%   This function generates a one-parameter orbit map with trajectory data 
%   in black and averge trajectory in red using three input vectors of
%   data.
%
%   It allows the user to specify the axes labels and figure title and
%   returns the resulting figure handle. 
%
%
%
%   INPUTS:
%   -------
%   xdata               : Row vector of bifurcation parameter values
%   ydata               : Row vector of population size data
%   yavgdata            : Row vector of population average data
%   bpidentity          : Bifurcation parameter index
%   bpconstantvalue     : Value of the fixed bifurcation parameter (scalar)
%   figuretitle         : String or array of strings
%   bplabel             : Latex-formatted bifurcation parameter name
%   yaxislabel          : String
%   legend entry        : String
%   oldfigurecounter    : counter for most recent figure
%
%   OUTPUTS:
%   --------
%   figurehandle:       : figure handle
%   figurecounter:      : counter for the figure generated by this script
%
%   DEPENDENCIES: 
%   -------------
%   None
%
%   USED BY: 
%   ---------
%   
%       figuregenerator_usercoice.m
%       *_figuregenerator_manuscript.m
%   
%
%   QUESTIONS about the code set? 
%               Email Laura Strube at LFStrube@gmail.com
%
%% ------------------------------------------------------------------------
%==========================================================================
%%  START CODE
%==========================================================================

%% (A) SET LATEX AS THE DEFAULT INTERPRETER
    %"groot"= root of all graphics objects
    set(groot,'defaultAxesTickLabelInterpreter','latex');  
    set(groot,'defaultTextInterpreter','latex');
    set(groot,'defaultLegendInterpreter','latex');
    set(groot,'defaultColorBarTickLabelInterpreter','latex');

%% (B) INITIALIZE FIGURE
    figurehandle=figure;
    newfigurecounter=oldfigurecounter+1;

%% (C) GENERATE SCATTERPLOT
    datalength=size(ydata,2);
    plot_xdata=repmat(xdata,1,datalength);
    plot_ydata=reshape(ydata,1,[]);
   
    p1=plot(plot_xdata,plot_ydata,'k.','DisplayName',legendentries{1});
    hold on
    p2=plot(xdata,yavgdata,'r.','LineWidth',2,'DisplayName',legendentries{2}); 
    hold off
        

%% (D) PLOT W AS DECREASING LEFT-TO-RIGHT (i.e. 1-w increasing left-to-right)
    if bpidentity == 4
        set(gca,'XDir','reverse') % flip matrix data and x-axis tick labels vertically so x-origin is bottom right.
        %bplabel='$\tilde{w}$'; % Note: Must update ticks to change
        %variable name
    end

%% (E) LABELS AND LIMITS
    xlim([0,max(xdata)]);
    title(figuretitle);

    xlabel(bplabel)
    ylabel(yaxislabel)
    legend

%% (F) RESET TEXT INTERPRETER TO DEFAULT
    set(groot,'defaultAxesTickLabelInterpreter','none');  
    set(groot,'defaultTextInterpreter','none');
    set(groot,'defaultLegendInterpreter','none');
    set(groot,'defaultColorBarTickLabelInterpreter','none');  

end
%==========================================================================
%%  END CODE
%==========================================================================


